services:
  engleap-client:
    container_name: engleap-client
    image: engleap-client
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    restart: always
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    depends_on:
      - engleap-server
    env_file: ".env"
    networks:
      - engleap-app-network

  engleap-server:
    container_name: engleap-server
    image: engleap-server
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - postgres
    env_file: ".env"
    networks:
      - engleap-app-network
      - postgres-network
    command: sh -c "./wait-for.sh postgres:${POSTGRES_PORT} -- ./wait-for.sh redis:${REDIS_PORT} -- node /app/index.js"

  postgres:
    image: postgres:14
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    networks:
      - postgres-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    env_file: ".env"
    ports:
      - "${PGADMIN_LISTEN_PORT}:${PGADMIN_LISTEN_PORT}"
    volumes:
      - ./tmp/pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - postgres-network

  nginx:
    image: openquantumsafe/nginx-quic
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    depends_on:
      - engleap-server
      - engleap-client
    volumes:
      - ./nginx-conf:/etc/nginx:ro
      - /etc/letsencrypt/live:/etc/letsencrypt/live:ro
      - /etc/letsencrypt/archive:/etc/letsencrypt/archive:ro
    networks:
      - engleap-app-network
    restart: unless-stopped
    command: [ "nginx", "-g", "daemon off;" ]

networks:
  postgres-network:
    driver: bridge
  engleap-app-network:
    driver: bridge
    #external: true
